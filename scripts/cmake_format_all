#!/bin/bash
# runs cmake-format recursively on a transferred directoy
# (you have to install cmake-format from https://github.com/cheshirekow/cmake_format)

function usage {
    echo "Usage: $0 ROOT_DIR"
    exit 1
}

if [ $# -eq 0 ]; then
    usage
fi

# Variable that will hold the name of the cmake-format command
FMT="cmake-format"

# check if cmake-format is available
if command -v "$FMT" > /dev/null 2>&1; then
  echo cmake-format is available
else
  echo cmake-format is not available
  exit 1
fi

# Check all of the arguments first to make sure they're all directories
for dir in "$@"; do
    if [ ! -d "${dir}" ]; then
        echo "${dir} is not a directory"
        usage
    fi
done

# Find a dominating file, starting from a given directory and going up.
find-dominating-file() {
    if [ -r "$1"/"$2" ]; then
        return 0
    fi
    if [ "$1" = "/" ]; then
        return 1
    fi
    find-dominating-file "$(realpath "$1"/..)" "$2"
    return $?
}

# Run cmake-format -i on all of the things
for dir in "$@"; do
    pushd "${dir}" &>/dev/null
    find . \
         \( -name '*.cmake' \
         -o -name 'CMakeLists.txt' \) \
         -exec "${FMT}" -i '{}' \;
    popd &>/dev/null
done
